"use strict";(self.webpackChunkonekey_document=self.webpackChunkonekey_document||[]).push([[8887],{7244:function(e,n,a){a.r(n),a.d(n,{frontMatter:function(){return i},contentTitle:function(){return o},metadata:function(){return l},toc:function(){return p},default:function(){return m}});var t=a(7462),r=a(3366),s=(a(7294),a(3905)),d=a(9216),i={hide_table_of_contents:!0,draft:!0},o=void 0,l={unversionedId:"Connect/Method List/cardanoGetAddress",id:"Connect/Method List/cardanoGetAddress",isDocsHomePage:!1,title:"cardanoGetAddress",description:"Cardano: get address",source:"@site/docs/Connect/Method List/cardanoGetAddress.mdx",sourceDirName:"Connect/Method List",slug:"/Connect/Method List/cardanoGetAddress",permalink:"/en/Connect/Method List/cardanoGetAddress",editUrl:"https://github.com/onekeyhq/documents/edit/main/docs/Connect/Method List/cardanoGetAddress.mdx",version:"current",frontMatter:{hide_table_of_contents:!0,draft:!0}},p=[{value:"Cardano: get address",id:"cardano-get-address",children:[{value:"Params",id:"params",children:[]},{value:"Example",id:"example",children:[]},{value:"Result",id:"result",children:[]}]}],c={toc:p};function m(e){var n=e.components,a=(0,r.Z)(e,["components"]);return(0,s.kt)("wrapper",(0,t.Z)({},c,a,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"cardano-get-address"},"Cardano: get address"),(0,s.kt)("p",null,"Display requested address derived by given ",(0,s.kt)("a",{parentName:"p",href:"https://cardanolaunch.com/assets/Ed25519_BIP.pdf"},"BIP32-Ed25519")," path on device and returns it to caller. User is presented with a description of the requested key and asked to confirm the export on OneKey."),(0,s.kt)("p",null,"ES6"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"const result = await OneKeyConnect.cardanoGetAddress(params);\n")),(0,s.kt)("p",null,"CommonJS"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"OneKeyConnect.cardanoGetAddress(params).then(function(result) {\n\n});\n")),(0,s.kt)("h3",{id:"params"},"Params"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"./commonParams"},(0,s.kt)("strong",{parentName:"a"}," Optional common params"))),(0,s.kt)("h4",{id:"exporting-single-address"},"Exporting single address"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"addressParameters")," \u2014 ",(0,s.kt)("em",{parentName:"li"},"required")," see description below"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"address")," \u2014 ",(0,s.kt)("em",{parentName:"li"},"optional")," ",(0,s.kt)("inlineCode",{parentName:"li"},"string")," address for validation (read ",(0,s.kt)("inlineCode",{parentName:"li"},"Handle button request")," section below)"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"protocolMagic")," - ",(0,s.kt)("em",{parentName:"li"},"required")," ",(0,s.kt)("inlineCode",{parentName:"li"},"Integer")," 764824073 for Mainnet, 42 for Testnet"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"networkId")," - ",(0,s.kt)("em",{parentName:"li"},"required")," ",(0,s.kt)("inlineCode",{parentName:"li"},"Integer")," 1 for Mainnet, 0 for Testnet"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"showOnOneKey")," \u2014 ",(0,s.kt)("em",{parentName:"li"},"optional")," ",(0,s.kt)("inlineCode",{parentName:"li"},"boolean")," determines if address will be displayed on device. Default is set to ",(0,s.kt)("inlineCode",{parentName:"li"},"true"))),(0,s.kt)("h4",{id:"exporting-bundle-of-addresses"},"Exporting bundle of addresses"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"bundle")," - ",(0,s.kt)("inlineCode",{parentName:"li"},"Array")," of Objects with single address fields")),(0,s.kt)("h4",{id:"address-parameters"},"Address Parameters"),(0,s.kt)("h6",{id:"flowtype"},(0,s.kt)("a",{parentName:"h6",href:"https://github.com/OneKeyHQ/connect/blob/onekey/src/js/types/networks/cardano.js#L37-L43"},"flowtype")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"addressType")," - ",(0,s.kt)("em",{parentName:"li"},"required")," ",(0,s.kt)("inlineCode",{parentName:"li"},"CardanoAddressType"),"/",(0,s.kt)("inlineCode",{parentName:"li"},"number")," - you can use the flow ",(0,s.kt)("inlineCode",{parentName:"li"},"CARDANO.ADDRESS_TYPE")," object or typescript ",(0,s.kt)("inlineCode",{parentName:"li"},"CardanoAddressType")," enum. Supports Base, Pointer, Enterprise, Byron and Reward address types."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"path")," \u2014 ",(0,s.kt)("em",{parentName:"li"},"required")," ",(0,s.kt)("inlineCode",{parentName:"li"},"string | Array<number>")," minimum length is ",(0,s.kt)("inlineCode",{parentName:"li"},"5"),". ",(0,s.kt)("a",{parentName:"li",href:"./path"},"read more")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"stakingPath")," \u2014 ",(0,s.kt)("em",{parentName:"li"},"optional")," ",(0,s.kt)("inlineCode",{parentName:"li"},"string | Array<number>")," minimum length is ",(0,s.kt)("inlineCode",{parentName:"li"},"5"),". ",(0,s.kt)("a",{parentName:"li",href:"./path"},"read more")," Used for base address derivation"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"stakingKeyHash")," - ",(0,s.kt)("em",{parentName:"li"},"optional")," ",(0,s.kt)("inlineCode",{parentName:"li"},"string")," hex string of staking key hash. Used for base address derivation (as an alternative to ",(0,s.kt)("inlineCode",{parentName:"li"},"stakingPath"),")"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"certificatePointer")," - ",(0,s.kt)("em",{parentName:"li"},"optional")," ",(0,s.kt)("inlineCode",{parentName:"li"},"CardanoCertificatePointer")," object. Must contain ",(0,s.kt)("inlineCode",{parentName:"li"},"number"),"s ",(0,s.kt)("inlineCode",{parentName:"li"},"blockIndex"),", ",(0,s.kt)("inlineCode",{parentName:"li"},"txIndex")," and ",(0,s.kt)("inlineCode",{parentName:"li"},"certificateIndex"),". (",(0,s.kt)("a",{parentName:"li",href:"https://github.com/OneKeyHQ/connect/blob/onekey/src/js/types/networks/cardano.js#L31-L35"},"flowtype"),") Used for pointer address derivation. ",(0,s.kt)("a",{parentName:"li",href:"https://hydra.iohk.io/build/2006688/download/1/delegation_design_spec.pdf#subsubsection.3.2.2"},"read more about pointer address"))),(0,s.kt)("h4",{id:"handle-button-request"},"Handle button request"),(0,s.kt)("p",null,"Since ",(0,s.kt)("inlineCode",{parentName:"p"},"onekey-connect@8.0.0")," there is a possibility to handle ",(0,s.kt)("inlineCode",{parentName:"p"},"UI.ADDRESS_VALIDATION")," event which will be triggered once the address is displayed on the device.\nYou can handle this event and display custom UI inside of your application."),(0,s.kt)("p",null,"If certain conditions are fulfilled popup will not be used at all:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"the user gave permissions to communicate with OneKey"),(0,s.kt)("li",{parentName:"ul"},"device is authenticated by pin/passphrase"),(0,s.kt)("li",{parentName:"ul"},"application has ",(0,s.kt)("inlineCode",{parentName:"li"},"OneKeyConnect.on(UI.ADDRESS_VALIDATION, () => {});")," listener registered"),(0,s.kt)("li",{parentName:"ul"},"parameter ",(0,s.kt)("inlineCode",{parentName:"li"},"address")," is set"),(0,s.kt)("li",{parentName:"ul"},"parameter ",(0,s.kt)("inlineCode",{parentName:"li"},"showOnOneKey")," is set to ",(0,s.kt)("inlineCode",{parentName:"li"},"true")," (or not set at all)"),(0,s.kt)("li",{parentName:"ul"},"application is requesting ONLY ONE(!) address")),(0,s.kt)("h3",{id:"example"},"Example"),(0,s.kt)("p",null,"Display byron address of first cardano account:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"OneKeyConnect.cardanoGetAddress({\n    addressParameters: {\n        addressType: 8,\n        path: \"m/44'/1815'/0'/0/0\",\n    },\n    protocolMagic: 764824073,\n    networkId: 1,\n});\n")),(0,s.kt)("p",null,"Display base address of first cardano account:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"OneKeyConnect.cardanoGetAddress({\n    addressParameters: {\n        addressType: 0,\n        path: \"m/1852'/1815'/0'/0/0\",\n        stakingPath: \"m/1852'/1815'/0'/2/0\",\n    },\n    protocolMagic: 764824073,\n    networkId: 1,\n});\n")),(0,s.kt)("p",null,"Display pointer address of first cardano account:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"OneKeyConnect.cardanoGetAddress({\n    addressParameters: {\n        addressType: 4,\n        path: \"m/1852'/1815'/0'/0/0\",\n        certificatePointer: {\n            blockIndex: 1,\n            txIndex: 2,\n            certificateIndex: 3,\n        },\n    },\n    protocolMagic: 764824073,\n    networkId: 1,\n});\n")),(0,s.kt)("p",null,"Display enterprise address of first cardano account:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"OneKeyConnect.cardanoGetAddress({\n    addressParameters: {\n        addressType: 6,\n        path: \"m/1852'/1815'/0'/0/0\",\n    },\n    protocolMagic: 764824073,\n    networkId: 1,\n});\n")),(0,s.kt)("p",null,"Display reward address of first cardano account:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"OneKeyConnect.cardanoGetAddress({\n    addressParameters: {\n        addressType: 14,\n        path: \"m/1852'/1815'/0'/0/0\",\n    },\n    protocolMagic: 764824073,\n    networkId: 1,\n});\n")),(0,s.kt)("p",null,"Return a bundle of cardano addresses without displaying them on device:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"OneKeyConnect.cardanoGetAddress({\n    bundle: [\n        // byron address, account 1, address 1\n        {\n            addressParameters: {\n                addressType: 8,\n                path: \"m/44'/1815'/0'/0/0\",\n            },\n            protocolMagic: 764824073,\n            networkId: 1,\n            showOnOneKey: false\n        },\n        // base address with staking key hash, account 1, address 1\n        {\n            addressParameters: {\n                addressType: 0,\n                path: \"m/1852'/1815'/0'/0/0\",\n                stakingKeyHash: '1bc428e4720702ebd5dab4fb175324c192dc9bb76cc5da956e3c8dff',\n            },\n            protocolMagic: 764824073,\n            networkId: 1,\n            showOnOneKey: false\n        },\n        // byron address, account 2, address 3, testnet\n        {\n            addressParameters: {\n                addressType: 8,\n                path: \"m/44'/1815'/1'/0/2\",\n            },\n            protocolMagic: 42,\n            networkId: 0,\n            showOnOneKey: false\n        },\n    ]\n});\n")),(0,s.kt)("p",null,"Validate address using custom UI inside of your application:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'import OneKeyConnect, { UI } from \'@onekeyhq/connect\';\n\nOneKeyConnect.on(UI.ADDRESS_VALIDATION, data => {\n    console.log("Handle button request", data.address, data.serializedPath);\n    // here you can display custom UI inside of your app\n});\n\nconst result = await OneKeyConnect.cardanoGetAddress({\n    addressParameters: {\n        addressType: 8,\n        path: "m/44\'/1815\'/0\'/0/0",\n    },\n    protocolMagic: 764824073,\n    networkId: 0,\n    address: "Ae2tdPwUPEZ5YUb8sM3eS8JqKgrRLzhiu71crfuH2MFtqaYr5ACNRdsswsZ",\n});\n// dont forget to hide your custom UI after you get the result!\n')),(0,s.kt)("h3",{id:"result"},"Result"),(0,s.kt)("p",null,"Result with only one address"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"{\n    success: true,\n    payload: {\n        addressParameters: {\n            addressType: number,\n            path: Array<number>, // hardend path\n            stakingPath?: Array<number>, // hardend path\n            stakingKeyHash?: string,\n            certificatePointer?: {\n                blockIndex: number,\n                txIndex: number,\n                certificatePointer: number,\n            }\n        }\n        serializedPath: string,\n        serializedStakingPath?: string,\n        protocolMagic: number,\n        networkId: number,\n        address: string,\n    }\n}\n")),(0,s.kt)("p",null,"Result with bundle of addresses"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"{\n    success: true,\n    payload: [\n        {\n            addressParameters: {\n                addressType: number,\n                path: Array<number>, // hardend path\n                stakingPath?: Array<number>, // hardend path\n                stakingKeyHash?: string,\n                certificatePointer?: {\n                    blockIndex: number,\n                    txIndex: number,\n                    certificatePointer: number,\n                }\n            }\n            serializedPath: string,\n            serializedStakingPath?: string,\n            protocolMagic: number,\n            networkId: number,\n            address: string,\n        },\n        {\n            addressParameters: {\n                addressType: number,\n                path: Array<number>, // hardend path\n                stakingPath?: Array<number>, // hardend path\n                stakingKeyHash?: string,\n                certificatePointer?: {\n                    blockIndex: number,\n                    txIndex: number,\n                    certificatePointer: number,\n                }\n            }\n            serializedPath: string,\n            serializedStakingPath?: string,\n            protocolMagic: number,\n            networkId: number,\n            address: string,\n        },\n        {\n            addressParameters: {\n                addressType: number,\n                path: Array<number>, // hardend path\n                stakingPath?: Array<number>, // hardend path\n                stakingKeyHash?: string,\n                certificatePointer?: {\n                    blockIndex: number,\n                    txIndex: number,\n                    certificatePointer: number,\n                }\n            }\n            serializedPath: string,\n            serializedStakingPath?: string,\n            protocolMagic: number,\n            networkId: number,\n            address: string,\n        },\n    ]\n}\n")),(0,s.kt)("p",null,"Error"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"{\n    success: false,\n    payload: {\n        error: string // error message\n    }\n}\n")),(0,s.kt)(d.Z,{initValue:"OneKeyConnect.cardanoGetAddress({\n    addressParameters: {\n        addressType: 8,\n        path: \"m/44'/1815'/0'/0/0\",\n    },\n    protocolMagic: 764824073,\n    networkId: 1,\n});",mdxType:"Playground"}))}m.isMDXComponent=!0}}]);